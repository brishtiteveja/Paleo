#                               \left(
#                                     \frac{
#                                         ^{18}O
#                                          }{
#                                         ^{16}O}
#                               \right)_{sample}
#                              }
#                             {
#                               \left(
#                                     \frac{
#                                         ^{18}O
#                                          }{
#                                         ^{16}O
#                                          }
#                               \right)_{standard}
#                             }
#                   -1 \right) * 1000%
# \)
#
# We have delta-Oxy-18 data for every 20 years for the holocene stage(0~12Ka)
# here. We can see the summary of the data below. The histogram also shows the
# frequency of delta-Oxy-18 data.
## Extrapolation of temperature
# The stable isotope ratio, (O18/O16), is the main reference parameter,
# since its variability is determined mainly by the cloud temperature at
# the moment of snow formation and thus has direct climatic relevance,
# assuming unchanged temperature and humidity at the original moisture
# source areas. On the greenland Ice Sheet, the present mean annual
# delta-Oxy18 ( the per mil deviation of O18/)16 ratio in the sample
# from the O18/O16 value in standard mean ocean water) of the snow is
# related closely to the mean annual surface temperature, T in degree
# Celsius, by the formula (Johnsen et al 1997)
# \( \delta = 0.67 T - 0.137 \)
# \(T = (\delta + 0.137) / 0.67 \)
#
# The GRIP calibration curve in Figure2(Johnsen et al 1997) is based on a
# slightly improved model for the temperature profile calculations by
# accounting fully for the thermal properties of the firn layer. This
# resulted in slight changes in the 8 - T relationship published
# earlier [Johnsenet al., 1995a],from 1.7 to 2.0øC/%o at -35%0 and
# from 3.5 to 3.1øC/%oat -42%0.
ngrip_oxy <- columns[['point']][[1]]$content
ngrip_oxy_df <- data.frame(age=ngrip_oxy$age,
oxy18=round(as.numeric(ngrip_oxy$name),3))
deltaOxyToTemp <- function(delta) {
alpha <- -211.4
beta <- -11.88
gamma <- -0.1925
Temp <- alpha + beta * delta + gamma * delta^2
return(Temp)
}
ngrip_oxy_df$temp <- deltaOxyToTemp(ngrip_oxy_df$oxy18)
ngrip_oxy_2000_df <- ngrip_oxy_df[ngrip_oxy_df$age <= 2,]
plot(ngrip_oxy_2000_df$age, ngrip_oxy_2000_df$oxy18,
t='l', lwd=2, xlab='Period (Ka)', ylab='Delta delta-18O (%.)',
main='NGRIP delta-Oxy-18 vs Year')
plot(ngrip_oxy_2000_df$age, ngrip_oxy_2000_df$temp,
lwd=2, t='l',
xlab='Period (Ka)', ylab='Temperature (°C)',
main='NGRIP delta-Oxy-18 derived Temperature (°C) vs Year')
head(ngrip_oxy_2000_df)
k1 <- kernel('daniell', 1)
oxy18.a <- kernapply(ngrip_oxy_2000_df$age, k1)
oxy18.k1 <- kernapply(ngrip_oxy_2000_df$oxy18, k1)
lines(oxy18.a, oxy18.k1, col='red')
k2 <- kernel('daniell', 2)
oxy18.a2 <- kernapply(ngrip_oxy_2000_df$age, k2)
oxy18.k2 <- kernapply(ngrip_oxy_2000_df$oxy18, k2)
lines(oxy18.a2, oxy18.k2, col='green')
k3 <- kernel('modified.daniell', c(1,1))
oxy18.a3 <- kernapply(ngrip_oxy_2000_df$age, k3)
oxy18.k3 <- kernapply(ngrip_oxy_2000_df$oxy18, k3)
lines(oxy18.a3, oxy18.k3, col='darkblue')
Pspec<- spec.pgram(ngrip_oxy_2000_df$oxy18,
#kernel = k3,
demean = TRUE, detrend = TRUE,
taper = 0.1, log='no', plot=T)
plot(Pspec$freq, Pspec$spec, t='l',
xlim=c(0, 0.2), ylim=c(0,0.4), lwd=2,
main="Spectral Power vs frequency for NGRIP delta-Oxy18 data",
xlab='Frequency(1/yr)',
ylab='Spectral Power'
)
dfPspec <- data.frame(freq = Pspec$freq, spec=Pspec$spec)
dfPspec <- dfPspec[order(dfPspec$spec, decreasing = T),]
time_window <- max(ngrip_oxy_2000_df$age) - min(ngrip_oxy_2000_df$age)
dfPspec$period <- 1 / dfPspec$freq *
(time_window / length(ngrip_oxy_2000_df$oxy18)) * 1000
dfPspec <- dfPspec[dfPspec$period >= 90,]
head(dfPspec, n=10)
# freq       spec   period
# 7  0.07 0.35022221 282.8571
# 3  0.03 0.31488731 660.0000
# 4  0.04 0.28987502 495.0000
# 12 0.12 0.25377032 165.0000
# 14 0.14 0.21836049 141.4286
# 15 0.15 0.16631844 132.0000
# 20 0.20 0.14631037  99.0000
# 8  0.08 0.09715666 247.5000
# 9  0.09 0.09511752 220.0000
# 10 0.10 0.09159793 198.0000
freql <- head(dfPspec$freq, n=10)
period <- head(dfPspec$period, n=10)
legnd <- head(dfPspec$period, n=10)
abline(v=freql, lty=2, col=1:length(legnd))
periodl <- round(head(1/freql), 0)
legnd <- paste(round(legnd, 0), ' yr', sep="")
legend('topleft', legend=legnd,
lty=2, col=1:length(freql), cex=0.75)
dfPspecP <- dfPspec[order(dfPspec$period, decreasing = F),]
head(dfPspecP)
plot(dfPspecP$period, dfPspecP$spec,
type='l', lwd=2, xlim=c(0, 900), ylim=c(0,0.35),
main="Spectral Power vs period for NGRIP delta-Oxy18 data",
xlab='Period (yr)',
ylab='Spectral Power')
abline(v=period, lty=2, col=1:length(legnd))
periodl <- paste(round(period, 0), 'yr')
legend('topright', legend=periodl,
lty=2, col=1:length(periodl), cex=0.75)
head(dfPspec, n=20)
library(astrochron)
df <- data.frame(age=ngrip_oxy_2000_df$age,
oxy18=ngrip_oxy_2000_df$oxy18)
df_model <- linterp(df, dt=0.02)
Mspec <- mtm(df_model, demean = T,
ntap = 7, tbw = 3, #ar1 = T,
output = 1, pl=2)
Mspecdf <- data.frame(Mspec)
Mspecdf <- Mspecdf[order(Mspecdf$Harmonic_CL, decreasing = T),]
time_window <- max(df$age) - min(df$age)
N <- length(df$oxy18)
Mspecdf$period <- (1/Mspecdf$Frequency) * 1000 #* (time_window / N)
head(Mspecdf[,c(1,2, 3, 9)], n = 30)
# Causality
library(vars)
data(Canada)
var.2c <- VAR(Canada, p = 2, type = "const")
causality(var.2c, cause = "e")
#use a robust HC variance-covariance matrix for the Granger test:
causality(var.2c, cause = "e", vcov.=vcovHC(var.2c))
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0) +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_blank(),
axis.line.x.top = element_line(color='black'),
axis.line.y = element_blank(color='black'))
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0) +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_blank(),
axis.line.x.top = element_line(color='black'),
axis.line.y = element_line(color='black'))
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0) +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_blank(),
axis.line.x.top = element_line(color='black'),
axis.line.y = element_line(color='black'))
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0) +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(panel.border = element_blank(),
panel.background = element_blank(),
#axis.line.x = element_blank(),
#axis.line.x.top = element_line(color='black'),
axis.line.y = element_line(color='black'))
p1
library(ggplot2)
df1 = data.frame(year=-eva*1000, event=ev)
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0) +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(panel.border = element_blank(),
panel.background = element_blank(),
#axis.line.x = element_blank(),
#axis.line.x.top = element_line(color='black'),
axis.line.y = element_line(color='black'))
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0) +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(panel.border = element_blank(),
panel.background = element_blank())
p1
dev.off()
plot.new()
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0) +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(panel.border = element_blank(),
panel.background = element_blank())
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0) +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_blank(),
axis.line.x.top = element_line(color='black'),
axis.line.y = element_line(color='black'))
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0) +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
axis.line.x.top = element_line(color='black'),
axis.line.y = element_line(color='black'))
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0) +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.line = element_blank())
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0) +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank())
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0) +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x.bottom = element_blank(),
axis.line.y = element_blank())
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0) +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(panel.border = element_blank(),
panel.background = element_blank())
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0) +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.title.x.bottom = element_blank())
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0) +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.text.x.bottom = element_blank())
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0) +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(panel.border = element_blank(),
panel.background = element_blank(),
axis.line.x = element_blank())
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0) +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(axis.line.x = element_blank())
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed') +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(axis.line.x = element_blank())
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed') +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(axis.line = element_blank())
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed') +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(panel.border=element_blank(),
panel.background=element_blank(),
axis.line = element_blank())
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed') +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(panel.border=element_blank(),
panel.background=element_blank(),
axis.line = element_blank(),
axis.line.x.top=element_line(color='black'))
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed') +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(panel.border=element_blank(),
panel.background=element_blank(),
axis.line.x.top=element_line(color='red'))
p1
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed') +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(#panel.border=element_blank(),
panel.background=element_blank(),
axis.line.x.top=element_line(color='red'))
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed') +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(#panel.border=element_blank(),
panel.background=element_blank(),
axis.line.x.top=element_line(color='red'),
axis.text.x.top=element_text(color='red'))
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed') +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(#panel.border=element_blank(),
panel.background=element_blank(),
axis.line.y.right=element_line(color='red'),
axis.text.x.top=element_text(color='red'))
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed') +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(panel.border=element_blank(),
panel.background=element_blank(),
axis.line.y.right=element_line(color='red'),
axis.text.x.top=element_text(color='red'))
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed') +
xlab("Year(Ka)") +
ylab("Event count") +
theme_bw() +
theme(
#   panel.border=element_blank(),
#    panel.background=element_blank(),
axis.line.y.right=element_line(color='red'),
axis.text.x.top=element_text(color='red'))
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed') +
xlab("Year(Ka)") +
ylab("Event count") +
#theme_bw() +
theme(
#   panel.border=element_blank(),
#    panel.background=element_blank(),
axis.line.y.right=element_line(color='red'),
axis.text.x.top=element_text(color='red'))
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed') +
xlab("Year(Ka)") +
ylab("Event count") +
#theme_bw() +
theme(
panel.border=element_blank(),
panel.background=element_blank(),
axis.line.y.right=element_line(color='red'),
axis.text.x.top=element_text(color='red'))
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed') +
xlab("Year(Ka)") +
ylab("Event count") +
#theme_bw() +
theme(
panel.border=element_blank(),
panel.background=element_blank(),
axis.line.y.right=element_line(color='red'),
axis.text.x.top=element_text(color='red'),
axis.ticks=element_blank())
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed') +
xlab("Year(Ka)") +
ylab("Event count") +
#theme_bw() +
theme(
panel.border=element_blank(),
panel.background=element_blank(),
axis.line.y.right=element_line(color='red'),
axis.text.x.top=element_text(color='red'),
axis.ticks=element_blank(),
axis.text=element_blank())
p1
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed') +
xlab("Year(Ka)") +
ylab("Event count") +
#theme_bw() +
theme(
panel.border=element_blank(),
panel.background=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank())
p1
p1 + theme(axis.line.y.right=element_line(color='red'))
p1 + theme(axis.line.y.right=element_line(color='red'))
p1 + theme(axis.line.y.right=element_line(color='red'),
axis.ticks.y.right = element_line(color = "red"))
devtools::install_github("tidyverse/ggplot2")
library(ggplot2)
df1 = data.frame(year=-eva*1000, event=ev)
p1 = ggplot(data=df1, aes(x=year, y=event)) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed') +
xlab("Year(Ka)") +
ylab("Event count") +
#theme_bw() +
theme(
panel.border=element_blank(),
panel.background=element_blank(),
axis.ticks=element_blank(),
axis.text=element_blank())
p1 + theme(axis.line.y.right=element_line(color='red'),
axis.ticks.y.right = element_line(color = "red"))
